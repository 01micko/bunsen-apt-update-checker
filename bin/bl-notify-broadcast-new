#!/bin/bash

HELP="bl-notify-broadcast is a script to run a command for all current X users.
By default, notify-send is run, and passed arguments (message, icon etc) 
are sent on as-is. Any other command can be used.

Usage: bl-notify-broadcast [-c|--command <command>] <arguments>

Optional arguments:
    -h | --help    Show this message
    -c | --command <command>    Run <command> instead of notify-send

This script must be run as root."

error_exit() {
    echo "$0 error: $1" >&2
    exit 1
}

cmd=notify-send

case $1 in
--help|-h)
    echo "$HELP"
    exit
    ;;
--command|-c)
    cmd=$2
    command -v "$cmd" >/dev/null || error_exit "cannot find command $cmd"
    shift 2
esac

required_commands=(notify-send) #array

missing_commands=
for i in "${required_commands[@]}"
do
    hash "$i" >/dev/null || missing_commands+=" $i"
done
[[ $missing_commands ]] && error_exit "This script requires the following commands: $missing_commands
Please install the packages containing the missing commands
and rerun the script."

[[ $( id -u ) -eq 0 ]] || error_exit "This script must be run as root."

declare -A displays users
users=()
displays=()

for i in $(users);do # "users" command o/p
    [[ $i = root ]] && continue
    users[$i]=1
done # unique names

for u in "${!users[@]}"; do
    for i in $(ps e -u "$u" | sed -rn 's/.* DISPLAY=(:[0-9]*).*/\1/p');do
        displays[$i]=$u
    done
done

for d in "${!displays[@]}";do
    sudo -u "${displays[$d]}" DISPLAY="$d" bash -c " $(printf '%q ' "$cmd" "$@" ) & "
done

exit
